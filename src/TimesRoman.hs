module TimesRoman where

import Data.Maybe

-- textWidth :: String -> Double
-- textWidth str = sum $ map (fromJust . lookup timesRomanWidths) str

textWidth :: String -> Double
textWidth = sum . widths

widths :: String -> [Double]
widths str = map (fromJust . (flip lookup) timesRomanWidths) str

timesRomanWidths = [
  (' ',4.0),
  ('A',11.546875),
  ('B',10.671875),
  ('C',10.671875),
  ('D',11.546875),
  ('E',9.765625),
  ('F',8.890625),
  ('G',11.546875),
  ('H',11.546875),
  ('I',5.328125),
  ('J',6.21875),
  ('K',11.546875),
  ('L',9.765625),
  ('M',14.21875),
  ('N',11.546875),
  ('O',11.546875),
  ('P',8.890625),
  ('Q',11.546875),
  ('R',10.671875),
  ('S',8.890625),
  ('T',9.765625),
  ('U',11.546875),
  ('V',11.546875),
  ('W',15.09375),
  ('X',11.546875),
  ('Y',11.546875),
  ('Z',9.765625),
  ('a',7.09375),
  ('b',8.0),
  ('c',7.09375),
  ('d',8.0),
  ('e',7.09375),
  ('f',5.328125),
  ('g',8.0),
  ('h',8.0),
  ('i',4.4375),
  ('j',4.4375),
  ('k',8.0),
  ('l',4.4375),
  ('m',12.4375),
  ('n',8.0),
  ('o',8.0),
  ('p',8.0),
  ('q',8.0),
  ('r',5.328125),
  ('s',6.21875),
  ('t',4.4375),
  ('u',8.0),
  ('v',8.0),
  ('w',11.546875),
  ('x',8.0),
  ('y',8.0),
  ('z',7.09375) ]
